<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Shimterface.Standard</name>
    </assembly>
    <members>
        <member name="M:Shimterface.TypeHelpers.GetAttribute``1(System.Reflection.MethodInfo)">
            <summary>
            Get attribute of method, including get/set for property
            </summary>
        </member>
        <member name="M:Shimterface.TypeHelpers.ResolveType(System.Type)">
            <summary>
            Resolves array or <see cref="!:IEnumerable&lt;&gt;"/> types to the internal element type, or return the given type.
            </summary>
            <param name="type">A type or collection of a type.</param>
            <returns>A singular type.</returns>
        </member>
        <member name="T:Shimterface.IShim">
            <summary>
            Interface for all shimmed types
            </summary>
        </member>
        <member name="M:Shimterface.IShim.Unshim">
            <summary>
            Return the original object that has been shimmed.
            </summary>
        </member>
        <member name="T:Shimterface.ShimAttribute">
            <summary>
            Mark a member type as explicitly shimming an item with a different name or return type.
            </summary>
        </member>
        <member name="T:Shimterface.ShimBuilder">
            <summary>
            Provides facility to create a shim that guarantees an object can be treated as the specified interface type.
            </summary>
        </member>
        <member name="M:Shimterface.ShimBuilder.ResetState">
            <summary>
            Not needed during normal use.
            Clears type cache to allow multiple testing.
            </summary>
        </member>
        <member name="F:Shimterface.ShimBuilder._dynamicTypeCache">
            <summary>
            Don't compile the type every time
            </summary>
        </member>
        <member name="M:Shimterface.ShimBuilder.IgnoreMissingMembers``1">
            <summary>
            Sets the creation-time assertion that all <typeparamref name="TInterface"/> members must exist in the shimmed type.
            Execution of such members will throw <see cref="T:System.NotImplementedException"/>.
            Once set, cannot be reversed.
            </summary>
        </member>
        <member name="M:Shimterface.ShimBuilder.Create``1">
            <summary>
            Create a factory proxy.
            <typeparamref name="TInterface"/> must only implement methods decorated with <see cref="T:Shimterface.StaticShimAttribute"/>.
            </summary>
        </member>
        <member name="M:Shimterface.ShimBuilder.Shim``1(System.Object)">
            <summary>
            Use a shim to make the given object look like the required type.
            Result will also implement <see cref="T:Shimterface.IShim"/>.
            </summary>
        </member>
        <member name="M:Shimterface.ShimBuilder.Shim``1(System.Object[])">
            <summary>
            Use a shim to make the given objects look like the required type.
            Results will also implement <see cref="T:Shimterface.IShim"/>.
            </summary>
        </member>
        <member name="M:Shimterface.ShimBuilder.Shim``1(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Use a shim to make the given objects look like the required type.
            Results will also implement <see cref="T:Shimterface.IShim"/>.
            </summary>
        </member>
        <member name="M:Shimterface.ShimBuilder.Shim(System.Type,System.Object)">
            <summary>
            Use a shim to make the given object look like the required type.
            Result will also implement <see cref="T:Shimterface.IShim"/>.
            </summary>
        </member>
        <member name="M:Shimterface.ShimBuilder.Unshim``1(System.Object)">
            <summary>
            Recast shim to original type.
            No type-safety checks. Must already be <typeparamref name="T"/> or be <see cref="T:Shimterface.IShim"/> of <typeparamref name="T"/>.
            </summary>
        </member>
        <member name="M:Shimterface.ShimBuilder.Unshim``1(System.Object[])">
            <summary>
            Recast shims to original type.
            No type-safety checks. Must already be <typeparamref name="T"/> or be <see cref="T:Shimterface.IShim"/> of <typeparamref name="T"/>.
            </summary>
        </member>
        <member name="M:Shimterface.ShimBuilder.Unshim``1(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Recast shims to original type.
            No type-safety checks. Must already be <typeparamref name="T"/> or be <see cref="T:Shimterface.IShim"/> of <typeparamref name="T"/>.
            </summary>
        </member>
        <member name="T:Shimterface.StaticShimAttribute">
            <summary>
            Mark property/field or method as being static within another type.
            </summary>
        </member>
        <member name="T:Shimterface.TypeShimAttribute">
            <summary>
            Mark signature type as being automatically shimmed from real implementation type
            </summary>
            <remarks>For methods and properties/fields, use <see cref="T:Shimterface.ShimAttribute"/> instead.</remarks>
        </member>
    </members>
</doc>
